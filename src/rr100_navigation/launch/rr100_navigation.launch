<?xml version="1.0"?>
<launch>
    <arg name="laserscan_topic" default="/rslidar_laserscan"
        doc="The topic in which the LiDAR laserscan data is published" />
    <arg name="pointcloud_topic" default="/rslidar_points"
        doc="The topic in which the LiDAR pointcloud data is published" />

    <arg name="use_pointcloud_to_laserscan_nodelet" default="false" />
    <arg name="nodelet_manager" default="rslidar_nodelet_manager" doc="Nodelet manager name" />

    <arg name="imu_topic" default="/imu/data" doc="The topic in which the IMU data is published" />
    <arg name="odom_topic" default="/rr100_steering_controller/odom"
        doc="The topic in which the robot's odometry data is published" />

    <arg name="gps_enabled" default="false" />
    <arg name="gps_topic" default="/ublox_node/fix"
        doc="The topic in which the robot's odometry data is published" />

    <arg name="cmd_vel_topic" default="/cmd_vel"
        doc="The topic in which velocity commands are published" />

    <arg name="cam_point_cloud_enabled" default="true"
        doc="Use the Realsense D435i point cloud for costmap updates" />
    <arg name="cam_point_cloud_topic" default="/camera/depth/color/points"
        doc="The depth camera point cloud topic" />
    <arg name="cam_rgb_topic" default="/camera/color/image_raw"
        doc="The RGB image camera topic" />

    <arg name="simulated" default="false" doc="Whether the robot is simulated" />
    <arg name="use_rviz" default="true" />

    <arg name="use_static_map" default="true" />
    <arg name="generate_map" default="true" />
    <arg name="map_resolution" default="0.05" doc="Map cell resolution" />

    <arg name="global_costmap_width" default="100.0"
        doc="Global costmap width (in meters) if no static map is specified" />
    <arg name="global_costmap_height" default="100.0"
        doc="Global costmap height (in meters) if no static map is specified" />

    <include file="$(find rr100_localization)/launch/ekf_odom.launch">
        <arg name="imu_topic" value="$(arg imu_topic)" />
        <arg name="odom_topic" value="$(arg odom_topic)" />
    </include>

    <group unless="$(arg generate_map)">
        <arg name="pgm_map_path" default="$(find rr100_navigation)/maps/map.pgm"
            doc="Map (pbm format) file path" />
        <arg name="posegraph_map_path" default="$(find rr100_navigation)/maps/map.posegraph"
            doc="Map (posegraph format) file path" />
        <node name="map_server" type="map_server" pkg="map_server"
            args="$(arg pgm_map_path)" />

        <include file="$(find rr100_slam)/launch/localization_only.launch">
            <arg name="use_pointcloud_to_laserscan_nodelet"
                value="$(arg use_pointcloud_to_laserscan_nodelet)" />
            <arg name="nodelet_manager" value="$(arg nodelet_manager)" />
            <arg name="laserscan_topic" value="$(arg laserscan_topic)" />
            <arg name="pointcloud_topic" value="$(arg pointcloud_topic)" />
            <arg name="imu_topic" value="$(arg imu_topic)" />
            <arg name="odom_topic" value="/odometry/filtered" />

            <arg name="gps_enabled" value="$(arg gps_enabled)" />
            <arg name="gps_topic" value="$(arg gps_topic)" />

            <arg name="simulated" value="$(arg simulated)" />
            <arg name="use_rviz" value="false" />
            <arg name="map_path" value="$(arg posegraph_map_path)" />
            <arg name="map_resolution" value="$(arg map_resolution)" />
        </include>
    </group>

    <group if="$(arg generate_map)">
        <include file="$(find rr100_slam)/launch/slam_2d.launch">
            <arg name="use_pointcloud_to_laserscan_nodelet"
                value="$(arg use_pointcloud_to_laserscan_nodelet)" />
            <arg name="nodelet_manager" value="$(arg nodelet_manager)" />
            <arg name="map_resolution" value="$(arg map_resolution)" />
            <arg name="laserscan_topic" value="$(arg laserscan_topic)" />
            <arg name="pointcloud_topic" value="$(arg pointcloud_topic)" />
            <arg name="imu_topic" value="$(arg imu_topic)" />
            <arg name="odom_topic" value="/odometry/filtered" />

            <arg name="gps_enabled" value="$(arg gps_enabled)" />
            <arg name="gps_topic" value="$(arg gps_topic)" />

            <arg name="simulated" value="$(arg simulated)" />
            <arg name="use_rviz" value="false" />
        </include>
    </group>

    <include file="$(find rr100_navigation)/launch/move_base.launch">
        <arg name="use_static_map" value="$(arg use_static_map)" />

        <arg name="cmd_vel_topic" value="$(arg cmd_vel_topic)" />
        <arg name="scan_topic" value="$(arg laserscan_topic)" />
        <arg name="odom_topic" value="$(arg odom_topic)" />

        <arg name="cam_point_cloud_enabled" value="$(arg cam_point_cloud_enabled)" />
        <arg name="cam_point_cloud_topic" value="$(arg cam_point_cloud_topic)" />

        <arg name="global_costmap_width" value="$(arg global_costmap_width)" />
        <arg name="global_costmap_height" value="$(arg global_costmap_height)" />
    </include>

    <include file="$(find rr100_drive_amp)/launch/drive_amp.launch">
        <arg name="twist_in" value="$(arg cmd_vel_topic)"/>
        <arg name="odom_in" value="$(arg odom_topic)"/>
        
        <arg name="twist_out" value="corrected_cmd_vel"/>
    </include>

    <include file="$(find yocs_velocity_smoother)/launch/standalone.launch">
        <arg name="config_file"           value="$(find yocs_velocity_smoother)/param/rr100_smoother.yaml"/>
        <arg name="raw_cmd_vel_topic"     value="corrected_cmd_vel"/>
        <arg name="smooth_cmd_vel_topic"  value="cmd_vel"/>
        <arg name="odom_topic"            value="$(arg odom_topic)"/>
    </include>

    <node name="rviz" type="rviz" pkg="rviz"
        args="-d $(find rr100_navigation)/rviz/rr100_navigation.rviz"
        if="$(arg use_rviz)">
        <remap from="camera/color/image_raw" to="$(arg cam_rgb_topic)" />
    </node>
</launch>